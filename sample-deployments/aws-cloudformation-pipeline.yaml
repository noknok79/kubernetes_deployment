AWSTemplateFormatVersion: '2010-09-09'

Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 10.0.0.0/16
            EnableDnsSupport: true
            EnableDnsHostnames: true

    Subnet:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: 10.0.0.0/24

    InternetGateway:
        Type: AWS::EC2::InternetGateway

    VPCGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref VPC
            InternetGatewayId: !Ref InternetGateway

    RouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC

    Route:
        Type: AWS::EC2::Route
        DependsOn: VPCGatewayAttachment
        Properties:
            RouteTableId: !Ref RouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    SubnetRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref Subnet
            RouteTableId: !Ref RouteTable

    SecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow SSH access
            VpcId: !Ref VPC
            SecurityGroupIngress:
                - IpProtocol: tcp
                    FromPort: 22
                    ToPort: 22
                    CidrIp: 0.0.0.0/0

    EKSCluster:
        Type: AWS::EKS::Cluster
        Properties:
            Name: my-eks-cluster
            RoleArn: arn:aws:iam::123456789012:role/my-eks-role
            ResourcesVpcConfig:
                SecurityGroupIds:
                    - !Ref SecurityGroup
                SubnetIds:
                    - !Ref Subnet

    RDSInstance:
        Type: AWS::RDS::DBInstance
        Properties:
            Engine: mysql
            DBInstanceIdentifier: my-rds-instance
            MasterUsername: admin
            MasterUserPassword: admin123
            AllocatedStorage: 20
            DBInstanceClass: db.t2.micro
            VPCSecurityGroups:
                - !Ref SecurityGroup
            AvailabilityZone: us-east-1a

    EC2Instance:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: ami-xxxxxxxxxxxxx
            InstanceType: t2.micro
            KeyName: my-key-pair
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                    DeviceIndex: 0
                    GroupSet:
                        - !Ref SecurityGroup
                    SubnetId: !Ref Subnet
            UserData:
                Fn::Base64: |
                    #!/bin/bash
                    # Add your desired state configuration here
