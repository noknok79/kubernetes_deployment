trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscriptionEndpoint: 'win365ent-tennant'
  resourceGroupName: 'terra-deploy-rg'
  servicePrincipalId: 1b88e6b9-1666-4eb0-9502-3b0bd6988557
  servicePrincipalKey: LiQ8Q~~uCK4CtzCcH7Kww3BrD6LP48ap2FdrqcXP
  tenantId: cab4c3be-84af-48f5-960f-7415daff3a80
  storageAccountName: 'terratfstatestrg2'
  terraformDirectory: '- task: TerraformTaskV4@4

steps:
  - task: CopyFiles@2
    displayName: 'Copy Terraform files'
    inputs:
      SourceFolder: 'sample_deployment'
      Contents: '**/*.tf'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/terraform'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Terraform files'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/terraform'
      ArtifactName: 'TerraformFiles'
      
  
    
  - task: AzureCLI@2
    displayName: 'Azure CLI - Login'
    inputs:
      azureSubscription: $(azureSubscriptionEndpoint)
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)
        
  - task: TerraformInstaller@0
    inputs:
      terraformVersion: 'v1.6.6'
  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'init'
      backendServiceArm: 'win365ent-tennant'
      backendAzureRmResourceGroupName: 'terraform-aks-storage-rg'
      backendAzureRmStorageAccountName: 'terratfstatestrg2'
      backendAzureRmContainerName: 'tfstatefiles'
  
  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'validate'
      workingDirectory: '$(System.DefaultWorkingDirectory)/sample_deployment'

  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'plan'
      environmentServiceNameAzureRM: 'win365ent-tennant'
  
  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/sample_deployment'
      environmentServiceNameAzureRM: 'win365ent-tennant'
  
  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/sample_deployment'
      environmentServiceNameAzureRM: 'win365ent-tennant'
